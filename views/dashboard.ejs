<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/css/dashboard.css">
</head>
<script>
    async function fetchDashboard() {
    const token = localStorage.getItem('token'); // Retrieve the token

    const response = await fetch('/admin/dashboard', {
        method: 'GET',
        headers: {
            'Authorization': token, // Include the token in the request
        },
    });

    if (response.ok) {
        const dashboardData = await response.json();
        // Handle dashboard data
    } else {
        alert('You need to log in to access this page.');
        window.location.href = '/admin/login'; // Redirect to login if not authorized
    }
}
</script>
<body>
    <header>
        <h1>Admin Dashboard</h1>
        <div class="admin-info">
            <span>Welcome, Admin</span>
            <button id="logoutBtn">Logout</button>

        </div>
    </header>

    <main>
        <section class="summary">
            <div class="card">
              <h3>Total Registrations</h3>
              <p><span id="totalApplicants"><%= totalApplicants %></span></p>
            </div>
            <div class="card">
              <h3>State</h3>
              <p><span id="totalStates"><%= totalStates %></span></p>
            </div>
            <div class="card">
              <h3>LGA</h3>
              <p><span id="totalLGAs"><%= totalLGAs %></span></p>
            </div>
          </section>
          
        
        <script>
            const fetchSummaryData = async () => {
                try {
                    const response = await axios.get('/api/summary'); // Adjust the endpoint as necessary
                    const data = response.data;
        
                    // Assuming the API returns an object with totalRegistrations, totalStates, and totalLGAs
                    document.getElementById('totalApplicants').textContent = data.totalRegistrations || 0;
                    document.getElementById('totalStates').textContent = data.totalStates || 0;
                    document.getElementById('totalLGAs').textContent = data.totalLGAs || 0;
                } catch (error) {
                    console.error('Error fetching summary data:', error);
                }
            };
        
            // Call the function to fetch data when the page loads
            window.onload = fetchSummaryData;
        </script>

        <!-- User Data Table -->
        <section class="user-table">
            <h2>Registered Users</h2>
            <input type="text" id="searchInput" placeholder="Search by Name, NIN, or BVN">
            <table>
                <thead>
                    <tr>
                        <th>User Code</th>
                        <th>Name</th>
                        <th>Phone</th>
                        <th>LGA</th>
                        <th>Ward</th>
                        <th>BVN</th>
                        <th>Bank Name</th>
                        <th>Account Number</th>
                    </tr>
                </thead>
          
                   
                <tbody id="userTableBody">
                    <% allApply.forEach(user => { %>
                        <tr data-id="<%= user._id %>">
                            <td><%= user.userCode %></td>
                            <td><%= user.name %></td>
                            <td><%= user.phone %></td>
                            <td><%= user.LGA %></td>
                            <td><%= user.ward %></td>
                            <td><%= user.bvn %></td>
                            <td><%= user.bankDetails.bankName %></td>
                            <td><%= user.bankDetails.accountNumber %></td>
                            <td>
                                <button class="deleteUserBtn" data-user-id="<%= user._id %>">Delete User</button>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
            <button id="addUserBtn" class="action-btn add-btn">Add User</button>

            <!-- Pagination Controls -->
            <div class="pagination">
                <button id="prevPageBtn">&laquo; Previous</button>
                <span id="currentPage">1</span>
                <button id="nextPageBtn">Next &raquo;</button>
            </div>
        </section>
         <!-- User Data Cards for Mobile View -->
         <section class="user-cards">
            <h2>Registered Users</h2>
            <input type="text" id="searchInput" placeholder="Search by Name, NIN, BVN or Unique ID">
            <% allApply.forEach(user => { %>
            <div class="user-card" data-id="<%= user._id %>">
                <div class="row"><span class="key">Usercode:</span> <span class="value"><%= user.userCode %></span></div>
                <div class="row"><span class="key">Name:</span> <span class="value"><%= user.name %></span></div>
                <div class="row"><span class="key">Phone:</span> <span class="value"><%= user.phone %></span></div>
                <div class="row"><span class="key">Occupation:</span> <span class="value"><%= user.occupation %></span></div>
                <div class="row"><span class="key">Education:</span> <span class="value"><%= user.education %></span></div>
                <div class="row"><span class="key">Government Benefit:</span> <span class="value"><%= user.govben %></span></div>
                <div class="row"><span class="key">LGA:</span> <span class="value"><%= user.LGA %></span></div>
                <div class="row"><span class="key">Ward:</span> <span class="value"><%= user.ward %></span></div>
                <div class="row"><span class="key">BVN:</span> <span class="value"><%= user.bvn %></span></div>
                <div class="row"><span class="key">Bank:</span> <span class="value"><%= user.bankDetails.bankName %></span></div>
                <div class="row"><span class="key">Account Number:</span> <span class="value"><%= user.bankDetails.accountNumber %></span></div>
                <button class="delete-btn" data-user-id="<%= user._id %>">Delete</button>
            </div>
            <% }); %>
            <!-- Repeat for each user record -->
        </section>
    </main>

    <footer>
        <p>&copy; 2024 Kwara State Government. All Rights Reserved.</p>
        <p class="creators">Powered by:</p>
    </footer>

    <!-- Confirmation Popup Modal -->
    <div id="deleteModal" class="modal">
        <div class="modal-content">
            <p>Are you sure you want to delete this record?</p>
            <button id="confirmDeleteBtn" class="confirm-btn">Confirm</button>
            <button id="cancelDeleteBtn" class="cancel-btn">Cancel</button>
        </div>
    </div>

    <script src="/js/dashboard.js"></script>
    <script src="/js/script.js"></script>
    <script>
        document.getElementById('admin-login-form').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const username = document.getElementById('username').value;
    const password = document.getElementById('password').value;
  
    const response = await fetch('/admin/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ adminEmail: username, adminPassword: password }),
    });
  
    const data = await response.json();
  
    if (response.ok) {
      localStorage.setItem('token', data.token); // Store token in local storage
      window.location.href = '/admin/dashboard'; // Redirect to dashboard
    } else {
      alert(data.message || 'Login failed');
    }
});

const deleteApplicant = async (userId) => {
    try {
        const token = localStorage.getItem('token'); // Get the token from local storage
        const response = await axios.delete(`/admin/api/users/${userId}`, {
            headers: { Authorization: `Bearer ${token}` }  // Include the token in the request headers
        });

        console.log('User deleted:', response.data);

        // Optionally, refresh the summary data or remove the user from the UI
        fetchSummaryData(); // Refresh the summary data after deletion

        // Optionally, remove the row from the table
        const row = document.querySelector(`tr[data-id='${userId}']`);
        if (row) row.remove(); // Remove the row from the table
    } catch (error) {
        console.error('Error deleting user:', error);
        alert('Error deleting user');
    }
};

// Adding event listeners dynamically to each delete button
window.onload = () => {
    const deleteButtons = document.querySelectorAll('.deleteUserBtn');
    deleteButtons.forEach((button) => {
        button.addEventListener('click', () => {
            const userId = button.getAttribute('data-user-id');
            const isConfirmed = confirm('Are you sure you want to delete this user?');
            if (isConfirmed) {
                deleteApplicant(userId);
            }
        });
    });
};

    </script>
</body>
</html>
